bootnode:
  enabled: true
  nodeSelector:
    nospot: "true"
  tolerations:
    - key: "nospot"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "nospot"
      operator: "Exists"
      effect: "NoExecute"
  terminationGracePeriodSeconds: 3
  updateStrategy:
    type: "OnDelete"
  config:
    extraFlags:
      - --ws
      - --wsaddr=0.0.0.0
      - --wsorigins=*
      - --wsapi=admin,net,debug,bzz,stream,accounting
      - --sync-mode=all
  persistence:
    enabled: true
    storageClass: "gp2-delete"
    accessMode: ReadWriteOnce
    size: 1Gi
  resources:
    requests:
      memory: 512Mi
      cpu: null
    limits:
      memory: 1524Mi
      cpu: null

swarm:
  nodeSelector:
    nospot: "true"
  tolerations:
    - key: "nospot"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "nospot"
      operator: "Exists"
      effect: "NoExecute"
  metricsEnabled: true
  tracingEnabled: true
  profilingEnabled: true
  terminationGracePeriodSeconds: 30
  imagePullPolicy: IfNotPresent
  podManagementPolicy: Parallel
  updateStrategy:
    type: "OnDelete"
  config:
    ens_api: "314159265dD8dbb310642f98f50C066173C1259b@https://cloudflare-eth.com"
    verbosity: 4
    debug: true
    maxpeers: 25
    bzznetworkid: 61
    storesize: "5000000" # 5000000 * 4KB = 20GB
    extraFlags:
      - --ws
      - --wsaddr=0.0.0.0
      - --wsorigins=*
      - --wsapi=admin,net,debug,bzz,stream,accounting,swap
      - --wsaddr=0.0.0.0
  secrets:
    password: qwerty
  ingress:
    domain: stg.swarm-gateways.net
    enabled: true
    tls:
      enabled: true
      acmeEnabled: false
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  persistence:
    enabled: true
    storageClass: "gp2-delete"
    accessMode: ReadWriteOnce
    size: 30Gi
  resources:
    requests:
      memory: 412Mi
      cpu: null
    limits:
      memory: 1224Mi
      cpu: null
  tracingAgent:
    resources:
      requests:
        memory: 64Mi
        cpu: null
      limits:
        memory: 64Mi
        cpu: null

influxdb:
  nodeSelector:
    nospot: "true"
  tolerations:
    - key: "nospot"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "nospot"
      operator: "Exists"
      effect: "NoExecute"
  resources:
    requests:
      memory: 256Mi
      cpu: null
    limits:
      memory: 8Gi
      cpu: null
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 40Gi
  config:
    meta:
      logging_enabled: true
    data:
      trace_logging_enabled: true

grafana:
  nodeSelector:
    nospot: "true"
  tolerations:
    - key: "nospot"
      operator: "Exists"
      effect: "NoSchedule"
    - key: "nospot"
      operator: "Exists"
      effect: "NoExecute"
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: metrics
        type: influxdb
        url: http://swarm-public-influxdb:8086
        database: metrics
        user: swarm
        password: swarm
        access: proxy
        isDefault: true
  dashboards:
    default:
      smoke:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/smoke.json
      ldbstore:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/ldbstore.json
      swarm:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/swarm.json
      upload-speed:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/upload-speed.json
      sliding:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/smoke-sliding.json
      kad:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/kad.json
      fetchers:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/fetchers.json
      timeouts:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/timeouts.json
      p2p:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/p2p.json
      pushsync:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/pushsync.json
      runtime:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/runtime.json
      pss:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/pss.json

jaeger:
  resources:
    requests:
      memory: 2000Mi
      cpu: null
    limits:
      memory: 5000Mi
      cpu: null
  config:
    env:
      SPAN_STORAGE_TYPE: memory
    args:
      - "--memory.max-traces=300000"
