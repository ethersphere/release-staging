bootnode:
  image:
    repository: ethersphere/swarm
    tag: edge-alltools
    #repository: stolen/swarm
    #tag: elad@sha256:683348ce144d36216fa21e08995857aff20cda1c76590b76e1ee48b0f8f18768
    #tag: elad@sha256:9af906899b8017328f0fb68fdda675fdc13ac5cea23584ea34c1d1c122b961f9 //above is fetcher mutex move
    #tag: elad@sha256:6f8f4166f5e34a2b4a6eb893bab90e6992fb8a3f740b1ae0a1906faf78660c42 
    #tag: elad@sha256:a270a1ebf6aa014ae70874a1bd781512b9c3bb6bb8176c46f30486a077fb6dcc // bin-zero thingy
  #nodeSelector:
    #nospot: "true"
  #tolerations:
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoSchedule"
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoExecute"
  terminationGracePeriodSeconds: 3
  updateStrategy:
    type: "OnDelete"
  config:
    extraFlags:
      - --tracing
  persistence:
    enabled: true
    storageClass: "gp2-delete"
    accessMode: ReadWriteOnce
    size: 1Gi
  resources:
    requests:
      memory: 512Mi
      cpu: null
    limits:
      memory: 1024Mi
      cpu: null

swarm:
  image:
    repository: ethersphere/swarm
    tag: edge
    #repository: stolen/swarm
    #tag: elad@sha256:683348ce144d36216fa21e08995857aff20cda1c76590b76e1ee48b0f8f18768
    #tag: elad@sha256:6f8f4166f5e34a2b4a6eb893bab90e6992fb8a3f740b1ae0a1906faf78660c42
    #tag: elad@sha256:a270a1ebf6aa014ae70874a1bd781512b9c3bb6bb8176c46f30486a077fb6dcc
    #tag: elad@sha256:9af906899b8017328f0fb68fdda675fdc13ac5cea23584ea34c1d1c122b961f9
  #nodeSelector:
    #nospot: "true"
  #tolerations:
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoSchedule"
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoExecute"
  metricsEnabled: true
  tracingEnabled: true
  profilingEnabled: true
  terminationGracePeriodSeconds: 3
  replicaCount: 40
  imagePullPolicy: Always
  podManagementPolicy: Parallel
  updateStrategy:
    type: "OnDelete"
  config:
    ens_api: "eth:314159265dD8dbb310642f98f50C066173C1259b@http://mainnet-geth-geth.geth:8545"
    verbosity: 4
    debug: true
    maxpeers: 40
    bzznetworkid: 172
    storesize: "160000" # 160000 * 4KB = 640MB
    extraFlags:
      - --ws
      - --ens-api=test:112234455c3a32fd11230c42e7bccd4a84e02010@http://ropsten-geth-geth.geth:8545
      - --wsaddr=0.0.0.0
      - --wsorigins=*
      - --wsapi=admin,net,debug,bzz,stream
      - --store.cache.size=1000
      - --vmodule=swarm/network/*=3,swarm/storage/*=3
      - --mutex-profile
      - --block-profile
  secrets:
    password: qwerty
  ingress:
    domain: stg.swarm-gateways.net
    enabled: true
    tls:
      enabled: true
      acmeEnabled: false
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 500m
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/ssl-redirect: "false"
  persistence:
    enabled: true
    storageClass: "gp2-delete"
    accessMode: ReadWriteOnce
    size: 30Gi
  resources:
    requests:
      memory: 412Mi
      cpu: null
    limits:
      memory: 1024Mi
      cpu: null
  tracingAgent:
    resources:
      requests:
        memory: 64Mi
        cpu: null
      limits:
        memory: 64Mi
        cpu: null

influxdb:
  resources:
    requests:
      memory: 256Mi
      cpu: null
    limits:
      memory: 8Gi
      cpu: null
  #nodeSelector:
    #nospot: "true"
  #tolerations:
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoSchedule"
    #- key: "nospot"
      #operator: "Exists"
      #effect: "NoExecute"
  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 15Gi
  config:
    meta:
      logging_enabled: true
    data:
      trace_logging_enabled: true

grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: metrics
        type: influxdb
        url: http://swarm-influxdb:8086
        database: metrics
        user: swarm
        password: swarm
        access: proxy
        isDefault: true
  dashboards:
    default:
      smoke:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/smoke.json
      ldbstore:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/ldbstore.json
      swarm:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/swarm.json
      upload-speed:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/upload-speed.json
      sliding:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/smoke-sliding.json
      kad:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/kad.json
      fetchers:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/fetchers.json
      timeouts:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/timeouts.json
      stream:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/stream.json
      retrieve:
        url: https://raw.githubusercontent.com/ethersphere/grafana-dashboards/master/retrieve.json

jaeger:
  resources:
    requests:
      memory: 2000Mi
      cpu: null
    limits:
      memory: 5000Mi
      cpu: null
  config:
    env:
      SPAN_STORAGE_TYPE: memory
    args:
      - "--memory.max-traces=300000"
